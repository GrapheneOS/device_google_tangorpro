<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2022, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Minimum screen brightness allowed by the power manager. -->
    <integer name="config_screenBrightnessDim">6</integer>

    <!-- Minimum screen brightness setting allowed by power manager.
         The user is forbidden from setting the brightness below this level.  -->
    <item name="config_screenBrightnessSettingMinimumFloat" format="float" type="dimen">0.0</item>

    <!-- Maximum screen brightness allowed by the power manager.
         The user is forbidden from setting the brightness above this level. -->
    <item name="config_screenBrightnessSettingMaximumFloat" format="float" type="dimen">1.0</item>

    <!-- Default screen brightness setting
         Must be in the range specified by minimum and maximum. -->
    <item name="config_screenBrightnessSettingDefaultFloat" format="float" type="dimen">0.29019607843</item>

    <!-- Boolean indicating whether display white balance is supported. -->
    <bool name="config_displayWhiteBalanceAvailable">true</bool>

    <!-- Boolean indicating whether display white balance should be enabled by default. -->
    <bool name="config_displayWhiteBalanceEnabledDefault">false</bool>

    <!-- See DisplayWhiteBalanceController.
         A float array containing a list of ambient color temperatures, in Kelvin. This array,
         together with config_displayWhiteBalanceDisplayColorTemperatures, is used to generate a
         lookup table used in DisplayWhiteBalanceController. This lookup table is used to map
         ambient color temperature readings to a target color temperature for the display.
         This table is optional. If used, this array must,
         1) Contain at least two entries
         2) Be the same length as config_displayWhiteBalanceDisplayColorTemperatures. -->
    <array name="config_displayWhiteBalanceAmbientColorTemperatures">
        <item>2700</item>
        <item>3100</item>
        <item>3700</item>
        <item>4200</item>
        <item>4800</item>
        <item>5300</item>
        <item>6000</item>
        <item>6500</item>
        <item>7000</item>
        <item>7500</item>
        <item>8000</item>
    </array>

    <!-- See DisplayWhiteBalanceController.
         An array containing a list of display color temperatures, in Kelvin. See
         config_displayWhiteBalanceAmbientColorTemperatures for additional details.
         The same restrictions apply to this array. -->
    <array name="config_displayWhiteBalanceDisplayColorTemperatures">
        <item>5250</item>
        <item>5550</item>
        <item>6000</item>
        <item>6250</item>
        <item>6450</item>
        <item>6550</item>
        <item>6750</item>
        <item>6850</item>
        <item>6950</item>
        <item>7050</item>
        <item>7100</item>
    </array>

    <!-- See DisplayWhiteBalanceController.
         The same as config_displayWhiteBalanceAmbientColorTemperatures, but with a stronger
         visual adjustment. -->
    <array name="config_displayWhiteBalanceStrongAmbientColorTemperatures">
        <item>2500</item>
        <item>3000</item>
        <item>3500</item>
        <item>4000</item>
        <item>4500</item>
        <item>5000</item>
        <item>5500</item>
        <item>6000</item>
        <item>6500</item>
        <item>7000</item>
        <item>7500</item>
        <item>8000</item>
    </array>

    <!-- See DisplayWhiteBalanceController.
         The same as config_displayWhiteBalanceDisplayColorTemperatures, but with a stronger
         visual adjustment. -->
    <array name="config_displayWhiteBalanceStrongDisplayColorTemperatures">
        <item>3000</item>
        <item>3700</item>
        <item>4600</item>
        <item>5200</item>
        <item>6100</item>
        <item>6800</item>
        <item>6800</item>
        <item>6800</item>
        <item>6800</item>
        <item>6800</item>
        <item>6800</item>
        <item>6800</item>
    </array>

    <!-- Enable doze mode
         ComponentName of a dream to show whenever the system would otherwise have gone to sleep. -->
    <string translatable="false" name="config_dozeComponent"></string>

    <!-- Whether the always on display mode is available. -->
    <bool name="config_dozeAlwaysOnDisplayAvailable">false</bool>

    <!-- Disable AOD by default -->
    <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <!-- Allow automatic adjusting of the screen brightness while dozing in low power state. -->
    <bool name="config_allowAutoBrightnessWhileDozing">true</bool>

    <!-- An array describing the screen's backlight values corresponding to the brightness
         values in the config_screenBrightnessNits array.

         This array should be equal in size to config_screenBrightnessBacklight. -->
    <integer-array name="config_screenBrightnessBacklight">
        <item>1</item>
        <item>255</item>
    </integer-array>

    <!-- An array of floats describing the screen brightness in nits corresponding to the backlight
         values in the config_screenBrightnessBacklight array.  On OLED displays these  values
         should be measured with an all white image while the display is in the fully on state.
         Note that this value should *not* reflect the maximum brightness value for any high
         brightness modes but only the maximum brightness value obtainable in a sustainable manner.

         This array should be equal in size to config_screenBrightnessBacklight -->
    <array name="config_screenBrightnessNits">
        <item>2.0</item>
        <item>500.0</item>
    </array>

    <!-- Nonlinear coefficients for maximum panel brightness of 500 nits -->
    <string-array name="config_reduceBrightColorsCoefficientsNonlinear">
        <!-- a-coefficient --> <item>-0.4553233597</item>
        <!-- b-coefficient --> <item>-0.2380196976</item>
        <!-- y-intercept --> <item>0.9801096801</item>
    </string-array>

    <!-- Linear coefficients for maximum panel brightness of 500 nits -->
    <string-array name="config_reduceBrightColorsCoefficients">
        <!-- a-coefficient --> <item>0.0</item>
        <!-- b-coefficient --> <item>-0.96</item>
        <!-- y-intercept --> <item>1.0</item>
    </string-array>

    <!-- Indicates whether device has a power button fingerprint sensor. -->
    <bool name="config_is_powerbutton_fps">true</bool>

    <dimen name="status_bar_height_default">104px</dimen>
    <dimen name="status_bar_height_portrait">104px</dimen>


    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
      The N entries of this array define N  1 zones as follows:
         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1     array[N] <= LUX < infinity
         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>8</item>
        <item>12</item>
        <item>20</item>
        <item>33</item>
        <item>55</item>
        <item>90</item>
        <item>148</item>
        <item>245</item>
        <item>403</item>
        <item>665</item>
        <item>1097</item>
        <item>1808</item>
        <item>2981</item>
        <item>4915</item>
    </integer-array>

    <!-- Array of light sensor lux values to define our levels for auto backlight brightness
         support whilst in idle mode.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)

         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux

         The control points must be strictly increasing. Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if lux == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).

         Spline interpolation is used to determine the auto-brightness
         backlight values for lux levels between these control points.

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevelsIdle">
        <item>3</item>
        <item>6</item>
        <item>11</item>
        <item>31</item>
        <item>64</item>
        <item>113</item>
        <item>180</item>
        <item>264</item>
        <item>364</item>
        <item>451</item>
        <item>1000</item>
    </integer-array>

    <!-- Array of desired screen brightness in nits corresponding to the lux values
      in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
      config_screenBrightnessMaximumNits, the display brightness is defined as the measured
      brightness of an all-white image.

      If this is defined then:
      - config_autoBrightnessLcdBacklightValues should not be defined
      - config_screenBrightnessNits must be defined
      - config_screenBrightnessBacklight must be defined

      This array should have size one greater than the size of the config_autoBrightnessLevels
      array. The brightness values must be non-negative and non-decreasing. This must be
      overridden in platform specific overlays -->
    <array name="config_autoBrightnessDisplayValuesNits">
      <item>5.139055</item>       <!--  0 - 1 -->
      <item>9.962018965</item>    <!--  1 - 2 -->
      <item>18.34822964</item>    <!--  2 - 3 -->
      <item>21.55068128</item>    <!--  3 - 4 -->
      <item>24.0167788</item>     <!--  4 - 8 -->
      <item>30.62162162</item>    <!--  8 - 12 -->
      <item>35.09486396</item>    <!--  12 - 20 -->
      <item>45.38057825</item>    <!--  20 - 33 -->
      <item>62.187656</item>      <!--  33 - 55 -->
      <item>88.01503</item>       <!--  55 - 90 -->
      <item>118.924484</item>     <!--  90 - 148 -->
      <item>147.89162</item>      <!--  148 - 245 -->
      <item>175.12471</item>      <!--  245 - 403 -->
      <item>191.33968</item>      <!--  403 - 665 -->
      <item>226.19489</item>      <!--  665 - 1097 -->
      <item>295.24768</item>      <!--  1097 - 1808 -->
      <item>396.007</item>        <!--  1808 - 2981 -->
      <item>440.62778</item>      <!--  2981 - 4915 -->
      <item>600.0</item>          <!--  4915+ -->
    </array>

    <!-- Array of desired screen brightness in nits for idle screen brightness mode.
         This array should meet the same requirements as config_autoBrightnessDisplayValuesNits.
         This array also corresponds to the lux values given in config_autoBrightnessLevelsIdle.
         In order to activate this mode, config_enableIdleScreenBrightnessMode must be true. -->
    <array name="config_autoBrightnessDisplayValuesNitsIdle">
      <item>0.24</item>     <!--  0 - 3 -->
      <item>1.1874</item>   <!--  3 - 6 -->
      <item>2.1349</item>   <!--  6 - 11 -->
      <item>3.9186</item>   <!--  11 - 31 -->
      <item>14.0218</item>  <!--  31 - 64 -->
      <item>30.2013</item>  <!--  64 - 113 -->
      <item>52.3367</item>  <!--  113 - 180 -->
      <item>84.5334</item>  <!--  180 - 264 -->
      <item>132.3271</item> <!--  264 - 364 -->
      <item>188.6010</item> <!--  364 - 451 -->
      <item>234.6615</item> <!--  451 - 1000 -->
      <item>500</item>      <!--  1000 + -->
    </array>

    <!-- Enables idle screen brightness mode on this device.
         If this is true, config_autoBrightnessDisplayValuesNitsIdle must be defined. -->
    <bool name="config_enableIdleScreenBrightnessMode">true</bool>

    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">2000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">4000</integer>

    <!-- the number of the max cached processes in the system. -->
    <integer name="config_customizedMaxCachedProcesses">64</integer>

    <integer-array name="config_ambientThresholdLevels">
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>5</item>
        <item>6</item>
        <item>7</item>
        <item>8</item>
        <item>9</item>
        <item>10</item>
        <item>20</item>
        <item>30</item>
        <item>40</item>
        <item>50</item>
        <item>60</item>
        <item>70</item>
        <item>80</item>
        <item>90</item>
        <item>100</item>
    </integer-array>

    <integer-array name="config_ambientBrighteningThresholds">
        <item>11373</item>
        <item>5000</item>
        <item>4333</item>
        <item>3666</item>
        <item>3000</item>
        <item>2760</item>
        <item>2520</item>
        <item>2280</item>
        <item>2040</item>
        <item>1800</item>
        <item>800</item>
        <item>527</item>
        <item>500</item>
        <item>470</item>
        <item>396</item>
        <item>322</item>
        <item>248</item>
        <item>174</item>
        <item>99</item>
        <item>99</item>
    </integer-array>

    <integer-array name="config_ambientDarkeningThresholds">
        <item>853</item>
        <item>700</item>
        <item>683</item>
        <item>666</item>
        <item>650</item>
        <item>640</item>
        <item>630</item>
        <item>620</item>
        <item>610</item>
        <item>600</item>
        <item>500</item>
        <item>500</item>
        <item>440</item>
        <item>385</item>
        <item>348</item>
        <item>311</item>
        <item>274</item>
        <item>237</item>
        <item>200</item>
        <item>200</item>
    </integer-array>

    <!-- List supported color modes. -->
    <integer-array name="config_availableColorModes">
        <item>0</item> <!-- COLOR_MODE_NATURAL -->
        <item>3</item> <!-- COLOR_MODE_AUTOMATIC -->
    </integer-array>

    <integer-array name="config_mappedColorModes">
        <item>0</item> <!-- COLOR_MODE_NATURAL -->
        <item>3</item> <!-- COLOR_MODE_BOOSTED -->
        <item>3</item> <!-- COLOR_MODE_SATURATED -->
        <item>3</item> <!-- COLOR_MODE_AUTOMATIC -->
    </integer-array>

    <!-- This device does not allow mobile data. -->
    <bool name="config_mobile_data_capable">false</bool>

    <!-- This device does not allow sms service. -->
    <bool name="config_sms_capable">false</bool>

    <!-- Shutdown if the battery temperature exceeds (this value * 0.1) Celsius. -->
    <integer name="config_shutdownBatteryTemperature">580</integer>
</resources>
